<File version="3.1">
  <FileID>647ac33b-2f6c-4506-b5b1-339af0d70851</FileID>
  <Preview>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</Preview>
  <Form>YVJt1H/vpN8BACODCAAAAAAABADtXW1z2rgW/n5/hYYPd+6doS0273vbzAQnoWkgYWOS3u2XjgEl8a2xGWPa
Zn/9lWxIgPhFko2OMczudHdZy9KRn/Po0dGR9PFm9D889uYn/0DoY/DvyHue4U8l/Xnu4en7r6Y9
cX7N31847jT4s4zC/lcZ3WN3bjr2p9r7Cv2rjLSF5S1c/MnGC881rDIaLEaWOb7Cz0PnB7Y/jZpN
oz6uN5R2tYYrrXYJ2caU1PxA3ncz88i75iU0fjKtiUueLmmO7bmONS/RtpLWDlxnhl3veVnqdDzG
M6+z8DzHXj5CHrrFD5iUHuPlUyP//99cldCH5Ws+rN4T8dqF5+hjw8Jn5hTbc79RJ0qtVkbkD+bC
fWeCSydnM5OphPk3eXjoLjDr08Hru67z69Se6E+uaf9IKtoxxj80x3Lc0snXJ9PD+pR8k6RCmmVi
2wvapyiKSjqh2mgnlbogH650ouNHB6O7yzJqzbzkIu6047gT7Ores0VquzB/48mZaVjOY1LZvuE+
mgQCfvPod/L/mVzqtzklhnWc36Q2w5ondkbftDlLXJM/Sydr8E4qoHuG6w2cuUmfLp1opPNJj4xd
jO2kokP8m3R6VD3nP8mrlk/2HGOy0arv9JePH/xnls8nM8PQGC0ddOf84BmjcVCVEsMPUTjsm2PX
mTsPHtINe4507JoPBJPv1fpbWL59R88ZG8HH8KHVTC6xgmOjjJplRP9MLhMAZc3O5CIDYzIx7cfS
SYsYk/y4ji3yQfHk0p5gAt8KQ4nA6yutOnWpeiO5BIHE8vVh7WeC1MB4xDLwNCP1dLGNSbFYSCXz
6FtLw8s8us7CnlxOScU949lZEGReOzZT8VcMEghW39CvKAhjYLjWPSzlXrBYLSPaRPInS7EVwppN
ijClylLmFWMhEI5ixThTkmFJhtnFjJD+znFJITIbOb/pe3XseaRL4wRREljapFdDHFEcLlGACWs3
W/kX4PBWvIJOXSkjtaGyFXrFDnsB3XNmEaN9HOJoVyC+vribY82ZzsjHG1mYvuUWk8a6fveEaUNm
/GpPePxDBn7HtCKCgzPD/eEr1CTsxqG3VSWfthrKI2kQHIXh7bazlg6AqFbIKFyvsxZ6BSKzfQGs
zm2DgIO1jBiiQt9zb84XhuVr87UBMPYl65LThyCeaE+G/Ygnb3v7++YDG1p0+boPAdA5sd8zRnj3
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</Form>
  <Code><![CDATA[function Set-DarkMode
{
	$formOptions.BackColor = '44,44,44'
	$tabpageGeneral.BackColor = '44,44,44'
	$tabpageGeneral.ForeColor = 'White'
	$groupboxFormSettings.BackColor = '44,44,44'
	$groupboxFormSettings.ForeColor = 'White'
	$groupboxUserSettings.BackColor = '44,44,44'
	$groupboxUserSettings.ForeColor = 'White'
	$groupboxO365Settings.BackColor = '44,44,44'
	$groupboxO365Settings.ForeColor = 'White'
	$textboxUserFormatDisplayName.BackColor = '35,35,35'
	$textboxUserFormatDisplayName.ForeColor = 'White'
	$textboxUserFormatEmail.BackColor = '35,35,35'
	$textboxUserFormatEmail.ForeColor = 'White'
	$textboxUserFormatSamAccountName.BackColor = '35,35,35'
	$textboxUserFormatSamAccountName.ForeColor = 'White'
	$textboxUserFormatUserPrincipalName.BackColor = '35,35,35'
	$textboxUserFormatUserPrincipalName.ForeColor = 'White'
	$buttonOK.BackColor = '35,35,35'
	$buttonOK.ForeColor = 'White'
	$linklabelUserFormats.linkColor = 'DeepSkyBlue'
	$tabpageADTitleCase.BackColor = '44,44,44'
	$tabpageADTitleCase.ForeColor = 'white'
	$groupboxgeneral.ForeColor = 'White'
	$groupboxgeneral.BackColor = '44,44,44'
	$groupboxADTitleCase.ForeColor = 'White'
	$groupboxADTitleCase.BackColor = '44,44,44'
	$groupboxAccount.BackColor = '44,44,44'
	$groupboxAccount.ForeColor = 'White'
	$groupboxAddress.BackColor = '44,44,44'
	$groupboxAddress.ForeColor = 'White'
	$groupboxOrganization.BackColor = '44,44,44'
	$groupboxOrganization.ForeColor = 'White'
	$tabpageO365TitleCase.BackColor = '44,44,44'
	$tabpageO365TitleCase.ForeColor = 'White'
	$groupboxO365TitleCase.BackColor = '44,44,44'
	$groupboxO365TitleCase.ForeColor = 'White'
	$groupboxO365General.BackColor = '44,44,44'
	$groupboxO365General.ForeColor = 'White'
	$groupboxO365Account.BackColor = '44,44,44'
	$groupboxO365Account.ForeColor = 'White'
	$groupboxO365Address.BackColor = '44,44,44'
	$groupboxO365Address.ForeColor = 'White'
	$comboboxDefaultCountryCode.FlatStyle = 'Flat'
	$comboboxDefaultCountryCode.BackColor = '35,35,35'
	$comboboxDefaultCountryCode.ForeColor = 'White'
	$textboxO365DisplayNameFormat.ForeColor = 'White'
	$textboxO365DisplayNameFormat.BackColor = '35,35,35'
	$textboxO365UPNFormat.ForeColor = 'White'
	$textboxO365UPNFormat.BackColor = '35,35,35'
	$linklabelO365UserFormats.linkColor = 'DeepSkyBlue'
	$textboxO365FormatEmail.BackColor = '35,35,35'
	$textboxO365FormatEmail.ForeColor = 'White'
}

function Set-LightMode
{
	$linklabelUserFormats.linkColor = '0, 0, 255'
	$formOptions.BackColor = 'WhiteSmoke'
	$tabpageGeneral.BackColor = 'WhiteSmoke'
	$tabpageGeneral.ForeColor = 'Black'
	$groupboxFormSettings.BackColor = 'White'
	$groupboxFormSettings.ForeColor = 'Black'
	$groupboxUserSettings.BackColor = 'White'
	$groupboxUserSettings.ForeColor = 'Black'
	$groupboxO365Settings.BackColor = 'White'
	$groupboxO365Settings.ForeColor = 'Black'
	$textboxUserFormatDisplayName.BackColor = 'White'
	$textboxUserFormatDisplayName.ForeColor = 'Black'
	$textboxUserFormatEmail.BackColor = 'White'
	$textboxUserFormatEmail.ForeColor = 'Black'
	$textboxUserFormatSamAccountName.BackColor = 'White'
	$textboxUserFormatSamAccountName.ForeColor = 'Black'
	$textboxUserFormatUserPrincipalName.BackColor = 'White'
	$textboxUserFormatUserPrincipalName.ForeColor = 'Black'
	$tabpageGeneral.BackColor = 'White'
	$buttonOK.BackColor = 'White'
	$buttonOK.ForeColor = 'Black'
	$tabpageADTitleCase.BackColor = 'White'
	$tabpageADTitleCase.ForeColor = 'Black'
	$groupboxgeneral.ForeColor = 'Black'
	$groupboxgeneral.BackColor = 'White'
	$groupboxADTitleCase.ForeColor = 'Black'
	$groupboxADTitleCase.BackColor = 'White'
	$groupboxAccount.BackColor = 'White'
	$groupboxAccount.ForeColor = 'Black'
	$groupboxAddress.BackColor = 'White'
	$groupboxAddress.ForeColor = 'Black'
	$groupboxOrganization.BackColor = 'White'
	$groupboxOrganization.ForeColor = 'Black'
	$tabpageO365TitleCase.BackColor = 'White'
	$tabpageO365TitleCase.ForeColor = 'Black'
	$groupboxO365TitleCase.BackColor = 'White'
	$groupboxO365TitleCase.ForeColor = 'Black'
	$groupboxO365General.BackColor = 'White'
	$groupboxO365General.ForeColor = 'Black'
	$groupboxO365Account.BackColor = 'White'
	$groupboxO365Account.ForeColor = 'Black'
	$groupboxO365Address.BackColor = 'White'
	$groupboxO365Address.ForeColor = 'Black'
	$comboboxDefaultCountryCode.FlatStyle = 'Standard'
	$comboboxDefaultCountryCode.BackColor = 'White'
	$comboboxDefaultCountryCode.ForeColor = 'Black'
	$textboxO365DisplayNameFormat.ForeColor = 'Black'
	$textboxO365DisplayNameFormat.BackColor = 'White'
	$textboxO365UPNFormat.ForeColor = 'Black'
	$textboxO365UPNFormat.BackColor = 'White'
	$linklabelO365UserFormats.linkColor = '0, 0, 255'
	$textboxO365FormatEmail.BackColor = 'White'
	$textboxO365FormatEmail.ForeColor = 'Black'
}
$formOptions_Load = {
	#CountryCode
	$CountryCode = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name CountryCode -ErrorAction SilentlyContinue).CountryCode)
	
	if ($null -eq $CountryCode)
	{
		$comboboxDefaultCountryCode.SelectedItem = 'US'
	}
	else
	{
		$comboboxDefaultCountryCode.SelectedItem = $CountryCode
	}
	
	$MFALogin = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name MFALogin -ErrorAction SilentlyContinue).MFALogin)
	
	if ($MFALogin -eq 1)
	{
		$radiobuttonMultiFactorLogin.Checked = $true
	}
	else
	{
		$radiobuttonNonMFALogin.Checked = $true
	}
	
	$AlwaysADCreate = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysADCreate -ErrorAction SilentlyContinue).AlwaysADCreate)
	
	if ($AlwaysADCreate -eq 1)
	{
		$checkboxEnable.Checked = $true
	}
	
	$AlwaysO365Create = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysO365Create -ErrorAction SilentlyContinue).AlwaysO365Create)
	
	if ($AlwaysO365Create -eq 1)
	{
		$checkboxCheckboxAlwaysO365.Checked = $true
	}
	
	$DarkMode = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name DarkMode -ErrorAction SilentlyContinue).DarkMode)
	
	if ($DarkMode -eq 1)
	{
		$null = (Set-DarkMode)
		$checkboxDarkMode.Checked = $true
	}
	else
	{
		$null = (Set-LightMode)
		$checkboxDarkMode.Checked = $false
	}
	
	##############
	$PasswordSettings = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name PasswordGen -ErrorAction SilentlyContinue).PasswordGen)
	
	if ($PasswordSettings -eq 0)
	{
		$radiobuttonPronounceablePasswor.Checked = $true
	}
	else
	{
		$radiobuttonRandomCharacterPassw.Checked = $true
	}
	
	$ADTitleCase = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADTitleCase -ErrorAction SilentlyContinue).ADTitleCase)
	
	if ($ADTitleCase -eq 1)
	{
		$checkboxADTitleCase.Checked = $true
	}
	else
	{
		$checkboxSelectAll.Enabled = $false
		$checkboxADTitleCase.Checked = $false
		
		$groupboxgeneral.Controls | ForEach-Object -Process {
			$null = (Add-Type -AssemblyName System.Windows.Forms)
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxAccount.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxAddress.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxOrganization.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	
	$O365TitleCase = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365TitleCase -ErrorAction SilentlyContinue).O365TitleCase)
	
	if ($O365TitleCase -eq 1)
	{
		$checkboxO365TitleCase.Checked = $true
	}
	else
	{
		$checkboxO365SelectAll.Enabled = $false
		$checkboxO365TitleCase.Checked = $false
		
		$groupboxO365General.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxO365Account.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxO365Address.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	
	$ADFirstName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADFirstName -ErrorAction SilentlyContinue).ADFirstName)
	
	if ($ADFirstName -eq 1)
	{
		$checkboxfirstname.Checked = $true
	}
	else
	{
		$checkboxfirstname.Checked = $false
	}
	
	# 
	$ADFirstName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADInitials -ErrorAction SilentlyContinue).ADInitials)
	
	if ($ADFirstName -eq 1)
	{
		$checkboxinitial.Checked = $true
	}
	else
	{
		$checkboxinitial.Checked = $false
	}
	
	# LastName
	$ADLastName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADLastName -ErrorAction SilentlyContinue).ADLastName)
	
	if ($ADLastName -eq 1)
	{
		$checkboxlastname.Checked = $true
	}
	else
	{
		$checkboxlastname.Checked = $false
	}
	
	# DisplayName
	$ADDisplayName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDisplayName -ErrorAction SilentlyContinue).ADDisplayName)
	
	if ($ADDisplayName -eq 1)
	{
		$checkboxdisplayname.Checked = $true
	}
	else
	{
		$checkboxdisplayname.Checked = $false
	}
	
	# Description
	$ADDescription = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription)
	
	if ($ADDescription -eq 1)
	{
		$checkboxdescription.Checked = $true
	}
	else
	{
		$checkboxdescription.Checked = $false
	}
	
	# UserPrincipalName
	$ADUPN = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADUPN -ErrorAction SilentlyContinue).ADUPN)
	
	if ($ADUPN -eq 1)
	{
		$checkboxupn.Checked = $true
	}
	else
	{
		$checkboxupn.Checked = $false
	}
	
	# Office
	$ADOffice = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice)
	
	if ($ADOffice -eq 1)
	{
		$checkboxoffice.Checked = $true
	}
	else
	{
		$checkboxoffice.Checked = $false
	}
	
	# SamAccountName
	$ADSamAccountName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADSamAccountName -ErrorAction SilentlyContinue).ADSamAccountName)
	
	if ($ADSamAccountName -eq 1)
	{
		$checkboxsamaccountname.Checked = $true
	}
	else
	{
		$checkboxsamaccountname.Checked = $false
	}
	
	# Street
	$ADStreet = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADStreet -ErrorAction SilentlyContinue).ADStreet)
	
	if ($ADStreet -eq 1)
	{
		$checkboxstreet.Checked = $true
	}
	else
	{
		$checkboxstreet.Checked = $false
	}
	
	# City
	$ADCity = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity)
	
	if ($ADCity -eq 1)
	{
		$checkboxcity.Checked = $true
	}
	else
	{
		$checkboxcity.Checked = $false
	}
	
	# State
	$ADState = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState)
	
	if ($ADState -eq 1)
	{
		$checkboxstate.Checked = $true
	}
	else
	{
		$checkboxstate.Checked = $false
	}
	
	# JobTitle
	$ADJobTitle = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADJobTitle -ErrorAction SilentlyContinue).ADJobTitle)
	
	if ($ADJobTitle -eq 1)
	{
		$checkboxjobtitle.Checked = $true
	}
	else
	{
		$checkboxjobtitle.Checked = $false
	}
	
	# Department
	$ADDepartment = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment)
	
	if ($ADDepartment -eq 1)
	{
		$checkboxdepartment.Checked = $true
	}
	else
	{
		$checkboxdepartment.Checked = $false
	}
	
	# Company
	$ADCompany = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany)
	
	if ($ADCompany -eq 1)
	{
		$checkboxcompany.Checked = $true
	}
	else
	{
		$checkboxcompany.Checked = $false
	}
	
	# O365
	# O365FirstName
	$O365FirstName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365FirstName -ErrorAction SilentlyContinue).O365FirstName)
	
	if ($O365FirstName -eq 1)
	{
		$checkboxO365FirstName.Checked = $true
	}
	else
	{
		$checkboxO365FirstName.Checked = $false
	}
	
	# O365LastName
	$O365LastName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365LastName -ErrorAction SilentlyContinue).O365LastName)
	
	if ($O365LastName -eq 1)
	{
		$checkboxO365LastName.Checked = $true
	}
	else
	{
		$checkboxO365LastName.Checked = $false
	}
	
	# O365DisplayName
	$O365DisplayName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365DisplayName -ErrorAction SilentlyContinue).O365DisplayName)
	
	if ($O365DisplayName -eq 1)
	{
		$checkboxO365DisplayName.Checked = $true
	}
	else
	{
		$checkboxO365DisplayName.Checked = $false
	}
	
	#O365UPN
	$O365UPN = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365UPN -ErrorAction SilentlyContinue).O365UPN)
	
	if ($O365UPN -eq 1)
	{
		$checkboxO365UPN.Checked = $true
	}
	else
	{
		$checkboxO365UPN.Checked = $false
	}
	
	# O365Street
	$O365Street = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365Street -ErrorAction SilentlyContinue).O365Street)
	
	if ($O365Street -eq 1)
	{
		$checkboxO365Street.Checked = $true
	}
	else
	{
		$checkboxO365Street.Checked = $false
	}
	
	# O365City
	$O365City = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City)
	
	if ($O365City -eq 1)
	{
		$checkboxO365City.Checked = $true
	}
	else
	{
		$checkboxO365City.Checked = $false
	}
	
	# O365State
	$O365State = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State)
	
	if ($O365State -eq 1)
	{
		$checkboxO365State.Checked = $true
	}
	else
	{
		$checkboxO365State.Checked = $false
	}
	
	# Reset Form
	$ResetForm = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ResetForm -ErrorAction SilentlyContinue).ResetForm)
	
	if ($ResetForm -eq 1)
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $true
	}
	else
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $false
	}
	
	# UserFormatDisplayName
	$UserFormatDisplayName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatDisplayName -ErrorAction SilentlyContinue).UserFormatDisplayName)
	
	$textboxUserFormatDisplayName.Text = $UserFormatDisplayName
	
	# UserFormatO365DisplayName
	$UserFormatO365DisplayName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365DisplayName -ErrorAction SilentlyContinue).UserFormatO365DisplayName)
	$textboxO365DisplayNameFormat.Text = $UserFormatO365DisplayName
	
	# UserFormatO365Email
	$UserFormatO365Email = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365Email -ErrorAction SilentlyContinue).UserFormatO365Email)
	$textboxO365FormatEmail.Text = $UserFormatO365Email
	
	# UserFormatEmail
	$UserFormatEmail = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatEmail -ErrorAction SilentlyContinue).UserFormatEmail)
	$textboxUserFormatEmail.Text = $UserFormatEmail
	
	# UserFormatSamAccountName
	$UserFormatSamAccountName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatSamAccountName -ErrorAction SilentlyContinue).UserFormatSamAccountName)
	$textboxUserFormatSamAccountName.Text = $UserFormatSamAccountName
	
	# UserFormatUserPrincipalName
	$UserFormatUserPrincipalName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatUserPrincipalName -ErrorAction SilentlyContinue).UserFormatUserPrincipalName)
	$textboxUserFormatUserPrincipalName.Text = $UserFormatUserPrincipalName
	
	# UserFormatUserPrincipalName
	$UserFormatO365UserPrincipalName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365UserPrincipalName -ErrorAction SilentlyContinue).UserFormatO365UserPrincipalName)
	$textboxO365UPNFormat.Text = $UserFormatO365UserPrincipalName
	
	#RESET FORM SETTINGS
	
	## AD
	# Description
	$ADDescriptionReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription)
	
	if ($ADDescriptionReset -eq 1)
	{
		$checkboxResetADDesc.Checked = $true
	}
	
	# Office
	$ADOfficeReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice)
	if ($ADOfficeReset -eq 1)
	{
		$checkboxResetADOffice.Checked = $true
	}
	
	# City
	$ADCityReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity)
	
	if ($ADCityReset -eq 1)
	{
		$checkboxResetADCity.Checked = $true
	}
	
	#State
	$ADStateReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState)
	
	if ($ADStateReset -eq 1)
	{
		$checkboxResetADState.Checked = $true
	}
	
	# Zip
	$ADZipReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADZip -ErrorAction SilentlyContinue).ADZip)
	
	if ($ADZipReset -eq 1)
	{
		$checkboxResetADZip.Checked = $true
	}
	
	# Department
	$ADDepartmentReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment)
	
	if ($ADDepartmentReset -eq 1)
	{
		$checkboxResetADDepartment.Checked = $true
	}
	
	#Company
	$ADCompanyReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany)
	
	if ($ADCompanyReset -eq 1)
	{
		$checkboxResetADCompany.Checked = $true
	}
	
	# Logon Script
	$ADLogonScriptReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADLogonScript -ErrorAction SilentlyContinue).ADLogonScript)
	
	if ($ADLogonScriptReset -eq 1)
	{
		$checkboxResetADLogonScript.Checked = $true
	}
	
	
	## OFFICE 365
	
	# City
	$O365CityReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City)
	
	if ($O365CityReset -eq 1)
	{
		$checkbox1ResetO365City.Checked = $true
	}
	
	#State
	$O365StateReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State)
	
	if ($O365StateReset -eq 1)
	{
		$checkboxResetO365State.Checked = $true
	}
	
	# Zip
	$O365ZipReset = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365Zip -ErrorAction SilentlyContinue).O365Zip)
	
	if ($O365ZipReset -eq 1)
	{
		$checkboxResetO365Zip.Checked = $true
	}
}

$buttonOK_Click = {
	# ADTitleCase
	if ($checkboxADTitleCase.CheckState -eq 'Checked')
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 0 -Force)
	}
	
	# Firstname
	if (($checkboxfirstname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstname -Value 0 -Force)
	}
	
	# Initials
	if (($checkboxinitial.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 0 -Force)
	}
	
	# Lastname
	if (($checkboxlastname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 0 -Force)
	}
	
	# DisplayName
	if (($checkboxdisplayname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 0 -Force)
	}
	
	# Description
	if (($checkboxdescription.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force)
	}
	
	# UserPrincipalName
	if (($checkboxupn.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 0 -Force)
	}
	
	# Office
	if (($checkboxoffice.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force)
	}
	
	# SamAccountName
	if (($checkboxsamaccountname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 0 -Force)
	}
	
	# Street
	if (($checkboxstreet.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 0 -Force)
	}
	
	# City
	if (($checkboxcity.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force)
	}
	
	# State
	if (($checkboxstate.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 0 -Force)
	}
	
	# JobTitle
	if (($checkboxjobtitle.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 0 -Force)
	}
	
	# Department
	if (($checkboxdepartment.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force)
	}
	
	# Company
	if (($checkboxcompany.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force)
	}
	
	# O365TitleCase
	if ($checkboxO365TitleCase.CheckState -eq 'Checked')
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 0 -Force)
	}
	
	# O365FirstName
	if (($checkboxO365FirstName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 0 -Force)
	}
	
	# O365LastName
	if (($checkboxO365LastName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 0 -Force)
	}
	
	# O365DisplayName
	if (($checkboxO365DisplayName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 0 -Force)
	}
	
	# O365UPN
	if (($checkboxO365UPN.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 0 -Force)
	}
	
	# O365Street
	if (($checkboxO365Street.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 0 -Force)
	}
	
	# O365City
	if (($checkboxO365City.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 0 -Force)
	}
	
	# O365State
	if (($checkboxO365State.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 0 -Force)
	}
	
	# Password Options
	if ($radiobuttonPronounceablePasswor.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 0 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 1 -Force)
	}
	
	# Reset Form After User Creation
	if ($checkboxResetAfterUserCreationEnabled.Checked -eq $false)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 0 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 1 -Force)
	}
	
	# UserFormatDisplayName
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value $textboxUserFormatDisplayName.Text -Force)
	
	if ('' -eq $textboxUserFormatDisplayName.text)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value '%FirstName% %LastName%' -Force)
	}
	
	# UserFormatO365DisplayName
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365DisplayName -Value $textboxO365DisplayNameFormat.Text -Force)
	
	# UserFormatEmail
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatEmail -Value $textboxUserFormatEmail.Text -Force)
	
	# UserFormatO365Email
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365Email -Value $textboxO365FormatEmail.Text -Force)
	
	# UserFormatSamAccountName
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatSamAccountName -Value $textboxUserFormatSamAccountName.Text -Force)
	
	# UserFormatUserPrincipalName
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatUserPrincipalName -Value $textboxUserFormatUserPrincipalName.Text -Force)
	
	# UserFormatO365UserPrincipalName
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365UserPrincipalName -Value $textboxO365UPNFormat.Text -Force)
	
	# CountryCode
	$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name CountryCode -Value $comboboxDefaultCountryCode.SelectedItem -Force)
}

$checkboxADTitleCase_CheckedChanged = {
	if ($checkboxADTitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxSelectAll.Enabled = $false
		$groupboxgeneral.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxAccount.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxAddress.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxOrganization.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	else
	{
		$checkboxSelectAll.Enabled = $true
		$groupboxgeneral.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		
		$groupboxAccount.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		
		$groupboxAddress.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		
		$groupboxOrganization.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
}

$checkboxSelectAll_CheckedChanged = {
	if (($checkboxSelectAll.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$groupboxgeneral.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		
		$groupboxAccount.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		
		$groupboxAddress.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		
		$groupboxOrganization.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	else
	{
		$groupboxgeneral.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		
		$groupboxAccount.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		
		$groupboxAddress.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		
		$groupboxOrganization.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
}

$checkboxO365SelectAll_CheckedChanged = {
	if (($checkboxO365SelectAll.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$groupboxO365General.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		
		$groupboxO365Account.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		
		$groupboxO365Address.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	else
	{
		$groupboxO365General.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		
		$groupboxO365Account.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		
		$groupboxO365Address.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
}

$checkboxO365TitleCase_CheckedChanged = {
	if ($checkboxO365TitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxO365SelectAll.Enabled = $false
		
		$groupboxO365General.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxO365Account.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		
		$groupboxO365Address.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	else
	{
		$checkboxO365SelectAll.Enabled = $true
		
		$groupboxO365General.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		
		$groupboxO365Account.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		
		$groupboxO365Address.Controls | ForEach-Object -Process {
			if ($_ -is [Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
}

#region Control Helper Functions
function Update-ComboBox
{
   <#
         .SYNOPSIS
         This functions helps you load items into a ComboBox.
	
         .DESCRIPTION
         Use this function to dynamically load items into the ComboBox control.
	
         .PARAMETER ComboBox
         The ComboBox control you want to add items to.
	
         .PARAMETER Items
         The object or objects you wish to load into the ComboBox's Items collection.
	
         .PARAMETER DisplayMember
         Indicates the property to display for the items in this control.
		
         .PARAMETER ValueMember
         Indicates the property to use for the value of the control.
	
         .PARAMETER Append
         Adds the item(s) to the ComboBox without clearing the Items collection.
	
         .EXAMPLE
         Update-ComboBox $combobox1 "Red", "White", "Blue"
	
         .EXAMPLE
         Update-ComboBox $combobox1 "Red" -Append
         Update-ComboBox $combobox1 "White" -Append
         Update-ComboBox $combobox1 "Blue" -Append
	
         .EXAMPLE
         Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
         .NOTES
         Additional information about the function.
   #>
	
	param
	(
		[Parameter(Mandatory)]
		[ValidateNotNull()]
		[Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory)]
		[ValidateNotNull()]
		$Items,
		[string]
		$DisplayMember,
		[string]
		$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}

function Update-ListBox
{
   <#
         .SYNOPSIS
         This functions helps you load items into a ListBox or CheckedListBox.
	
         .DESCRIPTION
         Use this function to dynamically load items into the ListBox control.
	
         .PARAMETER ListBox
         The ListBox control you want to add items to.
	
         .PARAMETER Items
         The object or objects you wish to load into the ListBox's Items collection.
	
         .PARAMETER DisplayMember
         Indicates the property to display for the items in this control.
	
         .PARAMETER Append
         Adds the item(s) to the ListBox without clearing the Items collection.
	
         .EXAMPLE
         Update-ListBox $ListBox1 "Red", "White", "Blue"
	
         .EXAMPLE
         Update-ListBox $listBox1 "Red" -Append
         Update-ListBox $listBox1 "White" -Append
         Update-ListBox $listBox1 "Blue" -Append
	
         .EXAMPLE
         Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
         .NOTES
         Additional information about the function.
   #>
	
	param
	(
		[Parameter(Mandatory)]
		[ValidateNotNull()]
		[Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory)]
		[ValidateNotNull()]
		$Items,
		[string]
		$DisplayMember,
		[switch]
		$Append
	)
	
	$null = (Add-Type -AssemblyName System.Windows.Forms)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [Windows.Forms.ListBox+ObjectCollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	$ListBox.DisplayMember = $DisplayMember
}
#endregion

$linklabelUserFormats_LinkClicked = [Windows.Forms.LinkLabelLinkClickedEventHandler]{
	$null = (Show-UserFormattingHelp_PSF)
}

$checkboxDarkMode_CheckedChanged = {
	if ($checkboxDarkMode.CheckState -eq 'Checked')
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 1 -Force)
		$null = (Set-DarkMode)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 0 -Force)
		$null = (Set-LightMode)
	}
}

$checkboxEnable_CheckedChanged = {
	if ($checkboxEnable.CheckState -eq 'Checked')
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 0 -Force)
	}
}

$checkboxCheckboxAlwaysO365_CheckedChanged = {
	if ($checkboxCheckboxAlwaysO365.CheckState -eq 'Checked')
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 0 -Force)
	}
}

$radiobuttonNonMFALogin_CheckedChanged = {
	if ($radiobuttonNonMFALogin.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 0 -Force)
	}
}

$radiobuttonMultiFactorLogin_CheckedChanged = {
	if ($radiobuttonMultiFactorLogin.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 1 -Force)
	}
}


$checkboxResetADDesc_CheckedChanged = {
	if ($checkboxResetADDesc.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force)
	}
}

$checkboxResetADOffice_CheckedChanged = {
	if ($checkboxResetADOffice.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force)
	}
}

$checkboxResetADCity_CheckedChanged = {
	if ($checkboxResetADCity.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force)
	}
}

$checkboxResetADState_CheckedChanged = {
	if ($checkboxResetADState.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 0 -Force)
	}
}

$checkboxResetADZip_CheckedChanged = {
	if ($checkboxResetADZip.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 0 -Force)
	}
}

$checkboxResetADDepartment_CheckedChanged = {
	if ($checkboxResetADDepartment.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force)
	}
}

$checkboxResetADCompany_CheckedChanged = {
	if ($checkboxResetADCompany.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force)
	}
}

$checkboxResetADLogonScript_CheckedChanged = {
	if ($checkboxResetADLogonScript.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 0 -Force)
	}
}

$checkbox1ResetO365City_CheckedChanged = {
	if ($checkbox1ResetO365City.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 0 -Force)
	}
}

$checkboxResetO365State_CheckedChanged = {
	if ($checkboxResetO365State.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 0 -Force)
	}
}

$checkboxResetO365Zip_CheckedChanged = {
	if ($checkboxResetO365Zip.Checked -eq $true)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 1 -Force)
	}
	else
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 0 -Force)
	}
}

$linklabelO365UserFormats_LinkClicked = [Windows.Forms.LinkLabelLinkClickedEventHandler]{
	$null = (Show-O365UserFormattingHelp_psf)
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>
<File version="3.1">
  <FileID>647ac33b-2f6c-4506-b5b1-339af0d70851</FileID>
  <Preview>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</Preview>
  <Form>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</Form>
  <Code><![CDATA[

function Set-DarkMode
{
	$formOptions.BackColor = "44,44,44"
	$tabpageGeneral.BackColor = "44,44,44"
	$tabpageGeneral.ForeColor = 'White'
	$groupboxFormSettings.BackColor = "44,44,44"
	$groupboxFormSettings.ForeColor = 'White'
	$groupboxUserSettings.BackColor = "44,44,44"
	$groupboxUserSettings.ForeColor = 'White'
	$groupboxO365Settings.BackColor = "44,44,44"
	$groupboxO365Settings.ForeColor = 'White'
	$textboxUserFormatDisplayName.BackColor = "35,35,35"
	$textboxUserFormatDisplayName.ForeColor = 'White'
	$textboxUserFormatEmail.BackColor = "35,35,35"
	$textboxUserFormatEmail.ForeColor = 'White'
	$textboxUserFormatSamAccountName.BackColor = "35,35,35"
	$textboxUserFormatSamAccountName.ForeColor = 'White'
	$textboxUserFormatUserPrincipalName.BackColor = "35,35,35"
	$textboxUserFormatUserPrincipalName.ForeColor = 'White'
	$buttonOK.BackColor = "35,35,35"
	$buttonOK.ForeColor = 'White'
	
	$linklabelUserFormats.linkColor = 'DeepSkyBlue'
	
	
	$tabpageADTitleCase.BackColor = "44,44,44"
	$tabpageADTitleCase.ForeColor = 'white'
	$groupboxgeneral.ForeColor = 'White'
	$groupboxgeneral.BackColor = "44,44,44"
	$groupboxADTitleCase.ForeColor = 'White'
	$groupboxADTitleCase.BackColor = "44,44,44"
	$groupboxAccount.BackColor = "44,44,44"
	$groupboxAccount.ForeColor = 'White'
	$groupboxAddress.BackColor = "44,44,44"
	$groupboxAddress.ForeColor = 'White'
	$groupboxOrganization.BackColor = "44,44,44"
	$groupboxOrganization.ForeColor = 'White'
	
	$tabpageO365TitleCase.BackColor = "44,44,44"
	$tabpageO365TitleCase.ForeColor = 'White'
	$groupboxO365TitleCase.BackColor = "44,44,44"
	$groupboxO365TitleCase.ForeColor = 'White'
	$groupboxO365General.BackColor = "44,44,44"
	$groupboxO365General.ForeColor = 'White'
	$groupboxO365Account.BackColor = "44,44,44"
	$groupboxO365Account.ForeColor = 'White'
	$groupboxO365Address.BackColor = "44,44,44"
	$groupboxO365Address.ForeColor = 'White'
	
	$comboboxDefaultCountryCode.FlatStyle = 'Flat'
	$comboboxDefaultCountryCode.BackColor = "35,35,35"
	$comboboxDefaultCountryCode.ForeColor = 'White'
	
	$textboxO365DisplayNameFormat.ForeColor = 'White'
	$textboxO365DisplayNameFormat.BackColor = "35,35,35"
	$textboxO365UPNFormat.ForeColor = 'White'
	$textboxO365UPNFormat.BackColor = "35,35,35"
	$linklabelO365UserFormats.linkColor = 'DeepSkyBlue'
	
	$textboxO365FormatEmail.BackColor = '35,35,35'
	$textboxO365FormatEmail.ForeColor = "White"
	
}

function Set-LightMode
{
	
	$linklabelUserFormats.linkColor = '0, 0, 255'
	
	$formOptions.BackColor = "WhiteSmoke"
	$tabpageGeneral.BackColor = "WhiteSmoke"
	$tabpageGeneral.ForeColor = 'Black'
	$groupboxFormSettings.BackColor = "White"
	$groupboxFormSettings.ForeColor = 'Black'
	$groupboxUserSettings.BackColor = "White"
	$groupboxUserSettings.ForeColor = 'Black'
	$groupboxO365Settings.BackColor = "White"
	$groupboxO365Settings.ForeColor = 'Black'
	$textboxUserFormatDisplayName.BackColor = "White"
	$textboxUserFormatDisplayName.ForeColor = 'Black'
	$textboxUserFormatEmail.BackColor = "White"
	$textboxUserFormatEmail.ForeColor = 'Black'
	$textboxUserFormatSamAccountName.BackColor = "White"
	$textboxUserFormatSamAccountName.ForeColor = 'Black'
	$textboxUserFormatUserPrincipalName.BackColor = "White"
	$textboxUserFormatUserPrincipalName.ForeColor = 'Black'
	$tabpageGeneral.BackColor = 'White'
	$buttonOK.BackColor = "White"
	$buttonOK.ForeColor = 'Black'
	
	
	$tabpageADTitleCase.BackColor = "White"
	$tabpageADTitleCase.ForeColor = 'Black'
	$groupboxgeneral.ForeColor = 'Black'
	$groupboxgeneral.BackColor = "White"
	$groupboxADTitleCase.ForeColor = 'Black'
	$groupboxADTitleCase.BackColor = "White"
	$groupboxAccount.BackColor = "White"
	$groupboxAccount.ForeColor = 'Black'
	$groupboxAddress.BackColor = "White"
	$groupboxAddress.ForeColor = 'Black'
	$groupboxOrganization.BackColor = "White"
	$groupboxOrganization.ForeColor = 'Black'
	
	$tabpageO365TitleCase.BackColor = "White"
	$tabpageO365TitleCase.ForeColor = 'Black'
	$groupboxO365TitleCase.BackColor = "White"
	$groupboxO365TitleCase.ForeColor = 'Black'
	$groupboxO365General.BackColor = "White"
	$groupboxO365General.ForeColor = 'Black'
	$groupboxO365Account.BackColor = "White"
	$groupboxO365Account.ForeColor = 'Black'
	$groupboxO365Address.BackColor = "White"
	$groupboxO365Address.ForeColor = 'Black'
	
	$comboboxDefaultCountryCode.FlatStyle = 'Standard'
	$comboboxDefaultCountryCode.BackColor = "White"
	$comboboxDefaultCountryCode.ForeColor = 'Black'
	
	$textboxO365DisplayNameFormat.ForeColor = 'Black'
	$textboxO365DisplayNameFormat.BackColor = "White"
	$textboxO365UPNFormat.ForeColor = 'Black'
	$textboxO365UPNFormat.BackColor = "White"
	$linklabelO365UserFormats.linkColor = '0, 0, 255'
	
	$textboxO365FormatEmail.BackColor = 'White'
	$textboxO365FormatEmail.ForeColor = "Black"
}
$formOptions_Load = {
	#CountryCode
	$CountryCode = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name CountryCode -ErrorAction SilentlyContinue).CountryCode
	if ($null -eq $CountryCode)
	{
		$comboboxDefaultCountryCode.SelectedItem = "US"
	}
	else
	{
		$comboboxDefaultCountryCode.SelectedItem = $CountryCode
		
	}
	$MFALogin = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name MFALogin -ErrorAction SilentlyContinue).MFALogin
	if ($MFALogin -eq 1)
	{
		$radiobuttonMultiFactorLogin.Checked = $true
	}
	else
	{
		$radiobuttonNonMFALogin.Checked = $true
	}
	
	$AlwaysADCreate = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysADCreate -ErrorAction SilentlyContinue).AlwaysADCreate
	if ($AlwaysADCreate -eq 1)
	{
		$checkboxEnable.Checked = $true
	}
	
	$AlwaysO365Create = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysO365Create -ErrorAction SilentlyContinue).AlwaysO365Create
	if ($AlwaysO365Create -eq 1)
	{
		$checkboxCheckboxAlwaysO365.Checked = $true
	}
	
	$DarkMode = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name DarkMode -ErrorAction SilentlyContinue).DarkMode
	if ($DarkMode -eq 1)
	{
		Set-DarkMode
		$checkboxDarkMode.Checked = $true
	}
	else
	{
		Set-LightMode
		$checkboxDarkMode.Checked = $false
	}
	
	
	##############
	$PasswordSettings = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name PasswordGen -ErrorAction SilentlyContinue).PasswordGen
	if ($PasswordSettings -eq 0)
	{
		$radiobuttonPronounceablePasswor.Checked = $true
	}
	else
	{
		$radiobuttonRandomCharacterPassw.Checked = $true
	}
	$ADTitleCase = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADTitleCase -ErrorAction SilentlyContinue).ADTitleCase
	if ($ADTitleCase -eq 1)
	{
		$checkboxADTitleCase.Checked = $true
	}
	else
	{
		$checkboxSelectAll.Enabled = $false
		$checkboxADTitleCase.Checked = $false
		
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	$O365TitleCase = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365TitleCase -ErrorAction SilentlyContinue).O365TitleCase
	if ($O365TitleCase -eq 1)
	{
		$checkboxO365TitleCase.Checked = $true
	}
	else
	{
		$checkboxO365SelectAll.Enabled = $false
		$checkboxO365TitleCase.Checked = $false
		
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	
	$ADFirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADFirstName -ErrorAction SilentlyContinue).ADFirstName
	if ($ADFirstName -eq 1)
	{
		$checkboxfirstname.Checked = $true
	}
	else
	{
		$checkboxfirstname.Checked = $false
	}
	#Initials
	$ADFirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADInitials -ErrorAction SilentlyContinue).ADInitials
	if ($ADFirstName -eq 1)
	{
		$checkboxinitial.Checked = $true
	}
	else
	{
		$checkboxinitial.Checked = $false
	}
	#LastName
	$ADLastName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADLastName -ErrorAction SilentlyContinue).ADLastName
	if ($ADLastName -eq 1)
	{
		$checkboxlastname.Checked = $true
	}
	else
	{
		$checkboxlastname.Checked = $false
	}
	#DisplayName
	$ADDisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDisplayName -ErrorAction SilentlyContinue).ADDisplayName
	if ($ADDisplayName -eq 1)
	{
		$checkboxdisplayname.Checked = $true
	}
	else
	{
		$checkboxdisplayname.Checked = $false
	}
	#Description
	$ADDescription = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription
	if ($ADDescription -eq 1)
	{
		$checkboxdescription.Checked = $true
	}
	else
	{
		$checkboxdescription.Checked = $false
	}
	#UserPrincipalName
	$ADUPN = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADUPN -ErrorAction SilentlyContinue).ADUPN
	if ($ADUPN -eq 1)
	{
		$checkboxupn.Checked = $true
	}
	else
	{
		$checkboxupn.Checked = $false
	}
	#Office
	$ADOffice = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice
	if ($ADOffice -eq 1)
	{
		$checkboxoffice.Checked = $true
	}
	else
	{
		$checkboxoffice.Checked = $false
	}
	#SamAccountName
	$ADSamAccountName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADSamAccountName -ErrorAction SilentlyContinue).ADSamAccountName
	if ($ADSamAccountName -eq 1)
	{
		$checkboxsamaccountname.Checked = $true
	}
	else
	{
		$checkboxsamaccountname.Checked = $false
	}
	#Street
	$ADStreet = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADStreet -ErrorAction SilentlyContinue).ADStreet
	if ($ADStreet -eq 1)
	{
		$checkboxstreet.Checked = $true
	}
	else
	{
		$checkboxstreet.Checked = $false
	}
	#City
	$ADCity = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity
	if ($ADCity -eq 1)
	{
		$checkboxcity.Checked = $true
	}
	else
	{
		$checkboxcity.Checked = $false
	}
	#State
	$ADState = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState
	if ($ADState -eq 1)
	{
		$checkboxstate.Checked = $true
	}
	else
	{
		$checkboxstate.Checked = $false
	}
	#JobTitle
	$ADJobTitle = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADJobTitle -ErrorAction SilentlyContinue).ADJobTitle
	if ($ADJobTitle -eq 1)
	{
		$checkboxjobtitle.Checked = $true
	}
	else
	{
		$checkboxjobtitle.Checked = $false
	}
	#Department
	$ADDepartment = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment
	if ($ADDepartment -eq 1)
	{
		$checkboxdepartment.Checked = $true
	}
	else
	{
		$checkboxdepartment.Checked = $false
	}
	#Company
	$ADCompany = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany
	if ($ADCompany -eq 1)
	{
		$checkboxcompany.Checked = $true
	}
	else
	{
		$checkboxcompany.Checked = $false
	}
	
	#O365
	#O365FirstName
	$O365FirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365FirstName -ErrorAction SilentlyContinue).O365FirstName
	if ($O365FirstName -eq 1)
	{
		$checkboxO365FirstName.Checked = $true
	}
	else
	{
		$checkboxO365FirstName.Checked = $false
	}
	#O365LastName
	$O365LastName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365LastName -ErrorAction SilentlyContinue).O365LastName
	if ($O365LastName -eq 1)
	{
		$checkboxO365LastName.Checked = $true
	}
	else
	{
		$checkboxO365LastName.Checked = $false
	}
	#O365DisplayName
	$O365DisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365DisplayName -ErrorAction SilentlyContinue).O365DisplayName
	if ($O365DisplayName -eq 1)
	{
		$checkboxO365DisplayName.Checked = $true
	}
	else
	{
		$checkboxO365DisplayName.Checked = $false
	}
	#O365UPN
	$O365UPN = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365UPN -ErrorAction SilentlyContinue).O365UPN
	if ($O365UPN -eq 1)
	{
		$checkboxO365UPN.Checked = $true
	}
	else
	{
		$checkboxO365UPN.Checked = $false
	}
	#O365Street
	$O365Street = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365Street -ErrorAction SilentlyContinue).O365Street
	if ($O365Street -eq 1)
	{
		$checkboxO365Street.Checked = $true
	}
	else
	{
		$checkboxO365Street.Checked = $false
	}
	#O365City
	$O365City = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City
	if ($O365City -eq 1)
	{
		$checkboxO365City.Checked = $true
	}
	else
	{
		$checkboxO365City.Checked = $false
	}
	#O365State
	$O365State = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State
	if ($O365State -eq 1)
	{
		$checkboxO365State.Checked = $true
	}
	else
	{
		$checkboxO365State.Checked = $false
	}
	
	
	
	#Reset Form
	$ResetForm = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ResetForm -ErrorAction SilentlyContinue).ResetForm
	if ($ResetForm -eq 1)
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $true
	}
	else
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $false
	}
	
	
	#UserFormatDisplayName
	$UserFormatDisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatDisplayName -ErrorAction SilentlyContinue).UserFormatDisplayName
	$textboxUserFormatDisplayName.Text = $UserFormatDisplayName
	
	#UserFormatO365DisplayName
	$UserFormatO365DisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365DisplayName -ErrorAction SilentlyContinue).UserFormatO365DisplayName
	$textboxO365DisplayNameFormat.Text = $UserFormatO365DisplayName
	
	#UserFormatO365Email
	$UserFormatO365Email = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365Email -ErrorAction SilentlyContinue).UserFormatO365Email
	$textboxO365FormatEmail.Text = $UserFormatO365Email
	
	#UserFormatEmail
	$UserFormatEmail = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatEmail -ErrorAction SilentlyContinue).UserFormatEmail
	$textboxUserFormatEmail.Text = $UserFormatEmail
	
	#UserFormatSamAccountName
	$UserFormatSamAccountName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatSamAccountName -ErrorAction SilentlyContinue).UserFormatSamAccountName
	$textboxUserFormatSamAccountName.Text = $UserFormatSamAccountName
	
	#UserFormatUserPrincipalName
	$UserFormatUserPrincipalName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatUserPrincipalName -ErrorAction SilentlyContinue).UserFormatUserPrincipalName
	$textboxUserFormatUserPrincipalName.Text = $UserFormatUserPrincipalName
	
	#UserFormatUserPrincipalName
	$UserFormatO365UserPrincipalName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365UserPrincipalName -ErrorAction SilentlyContinue).UserFormatO365UserPrincipalName
	$textboxO365UPNFormat.Text = $UserFormatO365UserPrincipalName
	
	
	
	#RESET FORM SETTINGS
	
	##AD
	#Description
	$ADDescriptionReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription
	if ($ADDescriptionReset -eq 1)
	{
		$checkboxResetADDesc.Checked = $true
	}
	
	#Office
	$ADOfficeReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice
	if ($ADOfficeReset -eq 1)
	{
		$checkboxResetADOffice.Checked = $true
	}
	
	#City
	$ADCityReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity
	if ($ADCityReset -eq 1)
	{
		$checkboxResetADCity.Checked = $true
	}
	
	#State
	$ADStateReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState
	if ($ADStateReset -eq 1)
	{
		$checkboxResetADState.Checked = $true
	}
	
	#Zip
	$ADZipReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADZip -ErrorAction SilentlyContinue).ADZip
	if ($ADZipReset -eq 1)
	{
		$checkboxResetADZip.Checked = $true
	}
	
	#Department
	$ADDepartmentReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment
	if ($ADDepartmentReset -eq 1)
	{
		$checkboxResetADDepartment.Checked = $true
	}
	
	#Company
	$ADCompanyReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany
	if ($ADCompanyReset -eq 1)
	{
		$checkboxResetADCompany.Checked = $true
	}
	
	#Logon Script
	$ADLogonScriptReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADLogonScript -ErrorAction SilentlyContinue).ADLogonScript
	if ($ADLogonScriptReset -eq 1)
	{
		$checkboxResetADLogonScript.Checked = $true
	}
	
	
	##OFFICE 365
	
	#City
	$O365CityReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City
	if ($O365CityReset -eq 1)
	{
		$checkbox1ResetO365City.Checked = $true
	}
	
	#State
	$O365StateReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State
	if ($O365StateReset -eq 1)
	{
		$checkboxResetO365State.Checked = $true
	}
	
	#Zip
	$O365ZipReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365Zip -ErrorAction SilentlyContinue).O365Zip
	if ($O365ZipReset -eq 1)
	{
		$checkboxResetO365Zip.Checked = $true
	}
	
}

$buttonOK_Click = {
	
	#ADTitleCase
	if ($checkboxADTitleCase.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 0 -Force | Out-Null
		
	}
	#Firstname
	if (($checkboxfirstname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstname -Value 0 -Force | Out-Null
		
	}
	#Initials
	if (($checkboxinitial.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 0 -Force | Out-Null
		
	}
	#Lastname
	if (($checkboxlastname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 0 -Force | Out-Null
		
	}
	#DisplayName
	if (($checkboxdisplayname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 0 -Force | Out-Null
		
	}
	#Description
	if (($checkboxdescription.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force | Out-Null
		
	}
	#UserPrincipalName
	if (($checkboxupn.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 0 -Force | Out-Null
		
	}
	#Office
	if (($checkboxoffice.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force | Out-Null
		
	}
	#SamAccountName
	if (($checkboxsamaccountname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 0 -Force | Out-Null
		
	}
	#Street
	if (($checkboxstreet.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 0 -Force | Out-Null
		
	}
	#City
	if (($checkboxcity.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force | Out-Null
		
	}
	#State
	if (($checkboxstate.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 0 -Force | Out-Null
		
	}
	#JobTitle
	if (($checkboxjobtitle.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 0 -Force | Out-Null
		
	}
	#Department
	if (($checkboxdepartment.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force | Out-Null
		
	}
	#Company
	if (($checkboxcompany.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force | Out-Null
		
	}
	
	#O365TitleCase
	if ($checkboxO365TitleCase.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 0 -Force | Out-Null
		
	}
	#O365FirstName
	if (($checkboxO365FirstName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 0 -Force | Out-Null
		
	}
	#O365LastName
	if (($checkboxO365LastName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 0 -Force | Out-Null
		
	}
	#O365DisplayName
	if (($checkboxO365DisplayName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 0 -Force | Out-Null
		
	}
	#O365UPN
	if (($checkboxO365UPN.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 0 -Force | Out-Null
		
	}
	#O365Street
	if (($checkboxO365Street.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 0 -Force | Out-Null
		
	}
	#O365City
	if (($checkboxO365City.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 0 -Force | Out-Null
		
	}
	#O365State
	if (($checkboxO365State.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 0 -Force | Out-Null
		
	}
	
	#Password Options
	if ($radiobuttonPronounceablePasswor.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 0 -Force | Out-Null
		
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 1 -Force | Out-Null
		
	}
	
	#Reset Form After User Creation
	if ($checkboxResetAfterUserCreationEnabled.Checked -eq $false)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 0 -Force | Out-Null
		
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 1 -Force | Out-Null
		
	}
	
	#UserFormatDisplayName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value $textboxUserFormatDisplayName.Text -Force | Out-Null
	if ("" -eq $textboxUserFormatDisplayName.text)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value "%FirstName% %LastName%" -Force | Out-Null
		
	}
	#UserFormatO365DisplayName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365DisplayName -Value $textboxO365DisplayNameFormat.Text -Force | Out-Null
	
	#UserFormatEmail
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatEmail -Value $textboxUserFormatEmail.Text -Force | Out-Null
	
	#UserFormatO365Email
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365Email -Value $textboxO365FormatEmail.Text -Force | Out-Null
	
	
	#UserFormatSamAccountName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatSamAccountName -Value $textboxUserFormatSamAccountName.Text -Force | Out-Null
	
	#UserFormatUserPrincipalName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatUserPrincipalName -Value $textboxUserFormatUserPrincipalName.Text -Force | Out-Null
	
	#UserFormatO365UserPrincipalName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365UserPrincipalName -Value $textboxO365UPNFormat.Text -Force | Out-Null
	
	#CountryCode
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name CountryCode -Value $comboboxDefaultCountryCode.SelectedItem -Force | Out-Null
	
}



$checkboxADTitleCase_CheckedChanged = {
	if ($checkboxADTitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxSelectAll.Enabled = $false
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	else
	{
		$checkboxSelectAll.Enabled = $true
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
	
	
}

$checkboxSelectAll_CheckedChanged = {
	if (($checkboxSelectAll.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	else
	{
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
}

$checkboxO365SelectAll_CheckedChanged = {
	if (($checkboxO365SelectAll.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	else
	{
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
	
}

$checkboxO365TitleCase_CheckedChanged = {
	if ($checkboxO365TitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxO365SelectAll.Enabled = $false
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	else
	{
		$checkboxO365SelectAll.Enabled = $true
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
	
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]
		$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}

function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}
#endregion

$linklabelUserFormats_LinkClicked = [System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Show-UserFormattingHelp_PSF
	
}

$checkboxDarkMode_CheckedChanged = {
	if ($checkboxDarkMode.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 1 -Force | Out-Null
		
		Set-DarkMode
		
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 0 -Force | Out-Null
		
		Set-LightMode
		
	}
	
}

$checkboxEnable_CheckedChanged = {
	if ($checkboxEnable.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 0 -Force | Out-Null
	}
	
}

$checkboxCheckboxAlwaysO365_CheckedChanged = {
	if ($checkboxCheckboxAlwaysO365.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 1 -Force | Out-Null
		
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 0 -Force | Out-Null
		
	}
	
}

$radiobuttonNonMFALogin_CheckedChanged = {
	if ($radiobuttonNonMFALogin.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 0 -Force | Out-Null
		
	}
	
}

$radiobuttonMultiFactorLogin_CheckedChanged = {
	if ($radiobuttonMultiFactorLogin.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 1 -Force | Out-Null
		
	}
	
}


$checkboxResetADDesc_CheckedChanged = {
	if ($checkboxResetADDesc.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADOffice_CheckedChanged = {
	if ($checkboxResetADOffice.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADCity_CheckedChanged = {
	if ($checkboxResetADCity.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADState_CheckedChanged = {
	if ($checkboxResetADState.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADZip_CheckedChanged = {
	if ($checkboxResetADZip.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADDepartment_CheckedChanged = {
	if ($checkboxResetADDepartment.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force | Out-Null
		
	}
	
	
}

$checkboxResetADCompany_CheckedChanged = {
	if ($checkboxResetADCompany.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADLogonScript_CheckedChanged = {
	if ($checkboxResetADLogonScript.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 0 -Force | Out-Null
		
	}
	
}

$checkbox1ResetO365City_CheckedChanged = {
	if ($checkbox1ResetO365City.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetO365State_CheckedChanged = {
	if ($checkboxResetO365State.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetO365Zip_CheckedChanged = {
	if ($checkboxResetO365Zip.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 1 -Force | Out-Null
	}
	else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 0 -Force | Out-Null
		
	}
	
}

$linklabelO365UserFormats_LinkClicked = [System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Show-O365UserFormattingHelp_psf
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>
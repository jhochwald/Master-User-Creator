<File version="3.1">
  <Code><![CDATA[#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main
{
   <#
         .SYNOPSIS
         The Main function starts the project application.
    
         .PARAMETER Commandline
         $Commandline contains the complete argument string passed to the script packager executable.
    
         .NOTES
         Use this function to initialize your script and to call GUI forms.
		
         .NOTES
         To get the console output in the Packager (Forms Engine) use: 
         $ConsoleOutput (Type: System.Collections.ArrayList)
   #>
	[CmdletBinding()]
	param ([String]
		$Commandline)
	
	$Global:Licenses2Add = (New-Object -TypeName 'System.Collections.Generic.List[System.Object]')
	
	###REG KEYS
	# Check if RegKey is present, if not then create one
	$RegKey = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator' -ErrorAction SilentlyContinue)
	
	if (! $RegKey)
	{
		# Create the root key
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator' -Force)
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force)
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force)
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\UpperCase\AD' -Force)
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\UpperCase\O365' -Force)
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\LowerCase\AD' -Force)
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\LowerCase\O365' -Force)
	}
	
	$RegKeyReset = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -ErrorAction SilentlyContinue)
	
	if (! $RegKeyReset)
	{
		$null = (New-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force)
	}
	
	$PasswordSettings = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name PasswordGen -ErrorAction SilentlyContinue).PasswordGen)
	
	if ($null -eq $PasswordSettings)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 0 -Force)
	}
	
	$UserFormatDisplayName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatDisplayName -ErrorAction SilentlyContinue).UserFormatDisplayName)
	
	if ($null -eq $UserFormatDisplayName)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value '%FirstName% %Initial% %LastName%' -Force)
	}
	
	$O365FormatDisplayName = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365DisplayName -ErrorAction SilentlyContinue).UserFormatO365DisplayName)
	
	if ($null -eq $UserFormatDisplayName)
	{
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365DisplayName -Value '%FirstName% %LastName%' -Force)
	}
	
	
	$O365EmailFormatting = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365Email -ErrorAction SilentlyContinue).UserFormatO365Email)
	
	if (($O365EmailFormatting -eq $config) -or ($config -eq ''))
	{
		$config = '%FirstLetterFirstName%%LastName%%UserPrincipalNameDomain%'
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365Email -Value $config -Force)
	}
	
	# Thank you to user that has helped suggest items for v2
	$Hill = ((Get-ItemProperty -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AHill -ErrorAction SilentlyContinue).AHill)
	
	if ($Hill -eq 1)
	{
		$null = (Add-Type -AssemblyName System.Windows.Forms)
		
		[System.Windows.Forms.MessageBox]::Show("Thank you Aaron Hill for all your ideas in improving this application, V2 wouldn't be as feature filled without all your ideas.", 'Thank You', 'OK')
		$null = (Get-Item -Path 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AHill -Value 0 -Force)
	}
	
	if ((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}


]]></Code>
</File>